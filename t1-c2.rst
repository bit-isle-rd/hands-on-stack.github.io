仮想サーバーを1台起動してみる(CLI)
================

----

概要
================

- ここではOpenStack上にコマンドラインを利用して仮想サーバーを１台起動します。
- ダッシュボードを利用した仮想サーバーの起動と比較するとわかりやすいと思います。

----


ログインIDの確認
================

- ログインIDを確認するには、以下のコマンドを実行します。

スクリプトの実行::

  ---------ここから---------
  $ check_id
  ---------ここまで---------


----


仮想サーバーの起動
================

- 以下のコマンドを実行して、仮想サーバーを起動します。

コマンドの実行::

  ---------ここから---------

  $ nova boot --flavor m1.xsmall --image "centos-base" \
  --key-name default --security-groups default \
  ${USER}-vm-from-cli
  ---------ここまで---------

${USER}の部分は環境変数により自動でseminerXXが設定されます。

----

仮想サーバーの起動状態の確認
================

- Horizonからインスタンス一覧を確認してみてください。
- 合わせて、以下のコマンドを実行し、仮想サーバーの起動状態を確認します。

コマンドの実行::

  ---------ここから---------
  $ nova list
  $ watch -n 10 nova console-log --length 20 ${USER}-vm-from-cli
  ---------ここまで---------

${USER}の部分は環境変数により自動でseminerXXが設定されます。

終了するには *Ctrl-c* になります。

ログインプロンプトが表示されたら次の操作に移ります。

----

セキュリティグループの設定
================

- OpenStack上で起動したインスタンスにはセキュリティグループというアクセスポリシーが適用されます。今回は起動時にdefaultを指定しました。defaultセキュリティグループの設定を確認します。

- 今回の環境では全てのIPアドレスからのSSH接続(22番ポート)を許容するように予め設定されています。

コマンドの実行::

  ---------ここから---------
  $ nova secgroup-list-rules default
  +-------------+-----------+---------+---------------+--------------+
  | IP Protocol | From Port | To Port | IP Range      | Source Group |
  +-------------+-----------+---------+---------------+--------------+
  | tcp         | 22        | 22      | 0.0.0.0/0     |              |
  +-------------+-----------+---------+---------------+--------------+
  ---------ここまで---------

----

稼働サーバーへのログイン
================

- 仮想サーバーへSSHでログインしてみます。

- 今回利用した *default* キーペアは、既にログインした *seminerXX* 環境に秘密鍵が保存してあるので、そちらを利用して仮想サーバーへログインしてみます。

コマンドの実行::

  ---------ここから---------
  $ nova list
  +--------------------------------------+-----------------------+--------+------------+-------------+---------------------+
  | ID                                   | Name                  | Status | Task State | Power State | Networks            |
  +--------------------------------------+-----------------------+--------+------------+-------------+---------------------+
  | e68dd840-2535-47ca-b597-63994f8e2a39 | seminer01-vm-from-cli | ACTIVE | -          | Running     | private=<IPアドレス>|
  +--------------------------------------+-----------------------+--------+------------+-------------+---------------------+
  $ cd $HOME
  $ ssh -i default.pem root@<IPアドレス>
  ---------ここまで---------

*<IPアドレス>* の部分は、実際に表示される値に読み替えてください。

----


後かたずけ
================

- 起動した仮想マシンを削除します。

- ログインした仮想マシンからexitしてから削除を実行します。
- 削除後、以下のようにリソースが削除されていることを確認します。

コマンドの実行::

  ---------ここから---------
  [root@seminer01-vm-from-cli ~]# exit
  $ nova delete ${USER}-vm-from-cli
  $ nova list
  +----+------+--------+------------+-------------+----------+
  | ID | Name | Status | Task State | Power State | Networks |
  +----+------+--------+------------+-------------+----------+
  +----+------+--------+------------+-------------+----------+

  ---------ここまで---------

----


ポイントとまとめ
================

- OpenStackではダッシュボードと同様の操作をコマンドラインから実施することができます。

  - 実際にはコマンドラインでできることの一部を、ダッシュボードから実行できる、というデザインです。

- コマンドラインでの仮想マシン作成は、シェルスクリプト化することで簡単に自動化可能です。

----



 - `次の演習へ <./t2-c1.html>`_

